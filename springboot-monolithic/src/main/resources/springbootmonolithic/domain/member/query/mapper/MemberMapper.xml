<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springbootmonolithic.domain.member.query.mapper.MemberMapper">
    <resultMap id="memberInformationIncludeRoles" type="springbootmonolithic.domain.member.query.dto.MemberInformationDTO">
        <id property="code" column="CODE"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="updatedAt" column="UPDATED_AT"/>
        <result property="email" column="EMAIL"/>
        <result property="nickname" column="NICKNAME"/>
        <result property="image" column="IMAGE"/>
        <collection property="roleDTO" ofType="springbootmonolithic.domain.member.query.dto.RoleDTO">
            <result property="role" column="TYPE"/>
        </collection>
    </resultMap>

    <select id="isExistsByNickname" resultType="_boolean" parameterType="string">
        SELECT
               EXISTS (
                SELECT 1
                FROM member M
                WHERE M.nickname = #{ nickname }
        )
    </select>
    <select id="isExistsByEmail" resultType="_boolean" parameterType="string">
        SELECT
        EXISTS (
        SELECT 1
        FROM member M
        WHERE M.email = #{ email }
        )
    </select>
    <select id="selectMemberInformationByEmail" resultMap="memberInformationIncludeRoles" parameterType="string">
        SELECT
               M.CODE
             , M.CREATED_AT
             , M.UPDATED_AT
             , M.EMAIL
             , M.NICKNAME
             , M.IMAGE
             , R.TYPE
          FROM member M
         INNER JOIN member_role MR
            ON (M.CODE = MR.MEMBER_CODE)
         INNER JOIN role R
            ON (MR.ROLE_CODE = R.CODE)
         WHERE M.EMAIL = #{ email }
           AND M.ACTIVE = 1
    </select>

</mapper>